import java.time.LocalDateTime
import java.util.concurrent.Callable
import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors
import java.util.concurrent.Future
import java.util.concurrent.TimeUnit

buildscript {
    repositories {
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.1.BUILD-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'


sourceCompatibility = 1.8

version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'BDD with Spring Boot and jBehave Quickstart'
    }
}

task runApp(type: JavaExec) {
    main = 'org.wachowiak.bdd.Application'
    classpath = sourceSets.main.runtimeClasspath
    println "I'm done executing."
}

//class RunAsyncTask extends DefaultTask{
//    @TaskAction
//    def startAsync(){
//        println "AAAAA"
//        ExecutorService executorService = Executors.newCachedThreadPool()
//        println 'a'
//        Future f = executorService.submit({
//            println 'd'
//           project.javaexec {
//               classpath = project.sourceSets.main.runtimeClasspath
//               main = 'org.wachowiak.bdd.Application'
//           }
//        } as Callable)
//        println 'b'
//        Thread.sleep(5000)
//        println 'c'
//        f.cancel(true)
//        List<Runnable> notExecutedTasks = executorService.shutdownNow()
//        println notExecutedTasks
////        executorService.awaitTermination(1, TimeUnit.SECONDS)
//        println 'd'
//    }
//}
//class RunWaitTask extends DefaultTask{
//    @TaskAction
//    def startWait(){
//        while (true){
//            Thread.sleep(100)
//            URL u = new URL ( "http://localhost:8080/")
//            try {
//                HttpURLConnection huc =  ( HttpURLConnection )  u.openConnection ()
//                print 'a'
//                huc.setRequestMethod ("GET")
//                print 'b'
//                huc.setConnectTimeout(100)
//                print 'c'
//
//                huc.connect ()
//                print 'opened'
//                return true
//            }catch (ConnectException exc){
//                print 'exc: ' + exc
//            }
//            print '.'
//
//        }
//    }
//}

//task helloAsync(type: RunAsyncTask, dependsOn: compileJava){
//    doLast{
//        println LocalDateTime.now().toString() + 'sleeping'
//        sleep(2 * 1000)
//    }
//}
//task helloWait(type: RunWaitTask)
//
//afterEvaluate {
//    test.dependsOn 'helloAsync'
//}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.11.RELEASE'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.11.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile group: 'org.jbehave', name: 'jbehave-core', version: '4.2'
    compile group: 'org.jbehave', name: 'jbehave-spring', version: '4.2'
}

sourceSets.test.resources.srcDir 'src/test/java'